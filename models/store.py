from models.product import Product
from database import get_connection
from models.order import Order


class Store:
    # –ú–µ–Ω–µ–¥–∂–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞ ‚Äî —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –±–∞–∑–æ–π.
    def __init__(self, name):
        self.name = name
        print(f"üõí –ú–∞–≥–∞–∑–∏–Ω ¬´{self.name}¬ª –∑–∞–ø—É—â–µ–Ω.")

    def add_product(self, name, price, quantity, category):
        try:
            product = Product(name, price, quantity, category)
            product.save_to_db()
        except ValueError as e:
            print("‚ùå –û—à–∏–±–∫–∞:", e)


    def show_catalog(self):
        products = Product.get_all()
        if not products:
            print("üì≠ –í –º–∞–≥–∞–∑–∏–Ω–µ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.")
            return
        print("\n=== –ö–ê–¢–ê–õ–û–ì –¢–û–í–ê–†–û–í ===")
        for p in products:
            print(f"ID:{p[0]} | {p[1]} | –¶–µ–Ω–∞: {p[2]} | –ö–æ–ª-–≤–æ: {p[3]} | –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {p[4]}")


    def sell_product(self, product_id, count):
        try:
            conn = get_connection()
            cur = conn.cursor()
            cur.execute("SELECT quantity, name, price FROM products WHERE id = ?", (product_id,))
            row = cur.fetchone()

            if not row:
                raise ValueError("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            qty, name, price = row

            if qty < count:
                raise ValueError("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ.")

            # –†–∞—Å—á—ë—Ç
            total = price * count
            new_qty = qty - count

            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫
            cur.execute("UPDATE products SET quantity = ? WHERE id = ?", (new_qty, product_id))
            conn.commit()
            conn.close()

            # –°–æ–∑–¥–∞—ë–º –∑–∞–∫–∞–∑
            order = Order(product_id, count, total)
            order.save_to_db()

            print(f"‚úÖ –ü—Ä–æ–¥–∞–Ω–æ {count} —à—Ç. '{name}' –Ω–∞ —Å—É–º–º—É {total:.2f} —Ä—É–±.")

        except ValueError as e:
            print(e)
        except Exception as e:
            print("üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ:", e)


    def total_inventory_value(self):
        conn = get_connection()
        cur = conn.cursor()
        cur.execute("SELECT SUM(price * quantity) FROM products")
        total = cur.fetchone()[0]
        conn.close()
        print(f"üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤: {total:.2f} —Ä—É–±.")


    def search_by_category(self, category):
        items = Product.find_by_category(category)
        if not items:
            print("üì≠ –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")
            return
        print(f"\n=== –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category} ===")
        for item in items:
            print(f"ID:{item[0]} | {item[1]} | –¶–µ–Ω–∞:{item[2]} | –ö–æ–ª-–≤–æ:{item[3]}")
